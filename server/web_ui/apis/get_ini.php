<?php

#
# Copyright 2013 Zynga Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#    http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#      distributed under the License is distributed on an "AS IS" BASIS,
#      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
# 


include_once 'XhProfModel.php';
include_once 'server.cfg';
include_once 'game_config.php';
include_once 'game_deploy_map.php';

$ip = null;
$game = null;
$deployment = null;

define("INI_HEADER_TEMPLATE",
       '### GENERATED BY ZPERFMON SERVER
# ### MD5: %s
');

function get_rs_db_conf_ini($rs_cfg_file) {

        $rs_cfg = parse_ini_file($rs_cfg_file, true);
        return array( 'db_host'=>$rs_cfg['DB']['host'],
                      'db_name'=>$rs_cfg['DB']['database'],
                      'db_user'=>$rs_cfg['DB']['user'],
                      'db_pass'=>$rs_cfg['DB']['password']
		);
}


function get_game_from_ip($ip) {
	global $server_cfg;
	global $deployment;

	$rs_conf_file = $server_cfg['rs_conf_file'];
	$db_conf = get_rs_db_conf_ini($rs_conf_file);

	$db_hndl = new XhProfModel($server_cfg, $db_conf, false);

	$result = $db_hndl->generic_execute_get_query("get_deployment_from_ip",
						      array('ip' => $ip));
	if ($result and isset($result[0])) {
		$deployment = $result[0]['deploy_id'];
		$gd_map = get_game_deploy_map($server_cfg);

		if (isset($gd_map[$deployment])) {
			return $gd_map[$deployment];
		}
	}

	return null;
}

function ip_in_candidates($ip, $server_cfg, $game) {

	$ip_list_file = sprintf($server_cfg["xhprof_ip_list"], $game);

	$result = false;
	$old_mtime = apc_fetch($ip_list_file . ".mtime", $result);
	$mtime = filemtime($ip_list_file);

	if (!$result || $mtime != $old_mtime) {
		apc_store($ip_list_file . ".mtime", $mtime);
		
		$ip_list = explode("\n", file_get_contents($ip_list_file));
		$ip_list = array_flip($ip_list);
		apc_store($ip_list_file . ".data", $ip_list);
	} else {
		$ip_list = apc_fetch($ip_list_file . ".data");
	}

	return isset($ip_list[$ip]);
}

function get_ip()
{
	global $ip;

	if (isset($_GET) and isset($_GET["ip"])) {
		$ip = $_GET["ip"];
		return $ip;
	}

	if (!isset($_SERVER)) {
		return null;
	}

        if (!empty($_SERVER['HTTP_CLIENT_IP'])) {
                $ip = $_SERVER['HTTP_CLIENT_IP'];
        } elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) { // to check ip is pass from proxy
                $ip = $_SERVER['HTTP_X_FORWARDED_FOR'];
        } elseif (isset($_SERVER) and key_exists('REMOTE_ADDR', $_SERVER)) {
		$ip = $_SERVER['REMOTE_ADDR'];
        }

        return $ip;
}


function get_game() {
	global $game;

	if (isset($_GET) and isset($_GET["game"])) {
		$game = $_GET["game"];
	} else {
		$ip = get_ip();
		if ($ip != null) {
			$game = get_game_from_ip($ip);
		}
	}

	return $game;
}

function send_fail($message=null) {
	global $ip;
	global $game;
	global $deployment;

	header($_SERVER["SERVER_PROTOCOL"] . " 400 Bad Request");

	echo "Could not generate config for\n";
	echo "ip \"$ip\" deployment \"$deployment\" game \"{$game}\"\n";
	if ($message != null) {
		echo $message, "\n";
	}
}

function send_ini($ini_header, $ini_content) {
	header($_SERVER["SERVER_PROTOCOL"] . " 200 Ok");			
	header("Content-type: text/plain");

	echo $ini_header;
	echo $ini_content;
}

function generate_ini($server_cfg) {
	global $ip;

	$game = get_game();
	$game_cfg = load_game_config($game);

	if ($game == null or empty($game_cfg) or
	    !in_array($game, $server_cfg["auto_ini_games"]) or
	    !ip_in_candidates($ip, $server_cfg, $game)) {
		send_fail("ini generation criteria not satisfied");
		return;
	}

	$ini_file_path = sprintf($server_cfg['ini_file_path'], $game);

	$ini = file_get_contents($ini_file_path);
	if (empty($ini)) {
		send_fail("Could not read ini file at $ini_file_path");
		return;
	}

	$md5_digest = md5($ini);
	$ini_header = sprintf(INI_HEADER_TEMPLATE, $md5_digest);
	send_ini($ini_header, $ini);
}

function main($server_cfg) {
	generate_ini($server_cfg);
}


main($server_cfg);
